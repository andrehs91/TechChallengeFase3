# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  imageRepositoryConsumer: 'techchallengefase3consumer'
  imageRepositoryProducer: 'techchallengefase3producer'
  dockerfilePathConsumer: '$(Build.SourcesDirectory)/FIAP.Consumer/Dockerfile'
  dockerfilePathProducer: '$(Build.SourcesDirectory)/FIAP.Producer/Dockerfile'

stages:
- stage: Build
  displayName: Build and Push
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: FileTransform@1
      displayName: Replace variables
      inputs:
        folderPath: '$(System.DefaultWorkingDirectory)/**/'
        fileType: 'json'
        targetFiles: '**/appsettings.json'
    - task: CopyFiles@2
      displayName: Copying files from FIAP.Core library to Consumer folder.
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/FIAP.Core'
        TargetFolder: '$(Build.SourcesDirectory)/FIAP.Consumer/FIAP.Core'
    - task: Docker@2
      displayName: Consumer - Build and Push to ACR
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryConsumer)
        dockerfile: $(dockerfilePathConsumer)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(Build.BuildId)
    - task: CopyFiles@2
      displayName: Copying files from FIAP.Core library to Producer folder.
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/FIAP.Core'
        TargetFolder: '$(Build.SourcesDirectory)/FIAP.Producer/FIAP.Core'
    - task: Docker@2
      displayName: Producer - Build and Push to ACR
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryProducer)
        dockerfile: $(dockerfilePathProducer)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: $(Build.BuildId)

- stage: DeployToACI
  displayName: Deploy To ACI
  jobs:
    - job: DeployToACIJob
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: AzureCLI@2
          displayName: 'Consumer - Deploy to ACI'
          inputs:
            azureSubscription: $(azureSubscription)
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az container create \
                --resource-group $(resourceGroup) \
                --name consumer \
                --image $(containerRegistry)/$(imageRepositoryConsumer):$(Build.BuildId) \
                --cpu 0.5 \
                --memory 1 \
                --registry-login-server $(containerRegistry) \
                --registry-username $(registryUsername) \
                --registry-password $(registryPassword)
        - task: AzureCLI@2
          displayName: 'Producer - Deploy to ACI'
          inputs:
            azureSubscription: $(azureSubscription)
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az container create \
                --resource-group $(resourceGroup) \
                --name producer \
                --image $(containerRegistry)/$(imageRepositoryProducer):$(Build.BuildId) \
                --cpu 0.5 \
                --memory 1 \
                --registry-login-server $(containerRegistry) \
                --registry-username $(registryUsername) \
                --registry-password $(registryPassword)
